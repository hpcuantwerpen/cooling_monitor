Design of the code (text is work in progress)
=============================================


(Sub)directories
----------------

The code is in the monitor subdirectory of the project. This directory contains
the following subdirectories:
* DEVICE: All code for each of the specific chiller/cooler device types.
* TEMPLATES: Templates that are read by the main Perl script and used to 
  generate certain HTML-files and the file with GNUplot commands.
* WEB: Other files that are used in the web pages, but don't need to be 
  changed.
  
In operation, the code needs two work subdirecties:
* One is used to store the log files. There are two formats: one has a limited
  number of columns but contains the data for the plots and thus is read at
  every call of GNUplot. The other is a set of files, one per month, with all
  the data that is captured from the chillers and coolers.
* The subdirectory used by the web server where all web pages are put. The 
  script also tries to detect if there has been a change to the WEB subdirectory
  of the code and tries to copy those static files again to the www-directory.
  The process is not flawless though since we tried to minimize the number of
  tests.
  
There are defaults in the code for those runtime subdirectories, but they can
also be set through command line arguments of the main script.
The defaults are ../data and ../www relative to the directory in which the 
script is run.


Structure of the code
---------------------

The code is partly object-oriented. In particular, every device that is being
monitored is an object, and all device types are "derived" from a generic
device object type inplemented in DEVICE/generic.pm.

The main routine takes the following steps:
* Initialization, including setting the directories for data and web pages
  etc.
* Next the devices are created. Data is gathered by the creator of each 
  device object type.
* Next a text file with all the raw data for the plots is generated. This page
  is used by the overview web page and the detailed tables per device.
  It is in this phase that the active alarms are also extracted from the data
  that was gathered during the creation of the device objects.
* The data files for the plots are updated
* The plots are generated through GNUplot. The code "prints" all commands
  directly to the GNUplot CLI through a pipe. Commands are generated by doing
  certain substitutions in the GNUplot command template file.
* The extended log files are updated
* Finally, we check if files in the web directory need to be updated. This is
  rarely the case. Since we want to make sure that the updated data is visible
  as fast as possible, we do these updates only at the end. 


Structure of the data and log files
-----------------------------------

The time stamps
-.-.-.-.-.-.-.-

The code uses two different kinds of time stamps
* Internally, it uses a time stamp in GMT (= Zulu time) according to the 
  ISO 8601 standard. We use the standard-compliant format YYYYMMDDThhmmZ.
* For improved readability, we also print the time stamp in UTC on the web
  pages. The graphs however are also based on the ZULU-time time stamp to
  avoid problems with the switch back and forth to daylight saving time.
  
The full log files
-.-.-.-.-.-.-.-.-.

There is one such file per device and per month. The files are named
deviceName-YYMM.log, e.g., chiller04-1601.log for the log file for chiller04
for January 2016. 

The files are tab-separated files that can be read easily by excel or other
spreadsheet programs.

The first line is contains the column names. The first column is always the 
time stamp, labeled "timestamp", and this column is followed by the data gathered
from the device, and named with the variable-specific part of the OID, X.Y
where for all AirDale devices X = 1 denotes the digital variables, X = 2 the
analog ones and X = 3 the integer ones, and Y is the number of the variable of
that type. The meaning of each of these variables can be read from the web page
that shows the device details or from the code for the specific device type.

The data files for GNUplot
-.-.-.-.-.-.-.-.-.-.-.-.-.

These contain only a selection of the variables, but contain data for a longer
period (since the start of the monitoring if data has not been removed 
manually from the top of the file). 

The file is again a tab separated ASCII file and thus can be read by most
spreadsheet programs also, but does not contain a row with the meaning of the
variables.

The columns are as follows:
- AireDale chiller data format: We use the same format for both generations of
  chillers, but some columns are left empty for the older ones that don't return
  as much data.
  01 timestamp: "%Y%m%dT%H%MZ" (ISO 8601, Zulu time)
  02 ambient temperature            AD14: analog  var 19   AD04: analog var  17
  03 Return water temperature       AD14: analog  var 20   AD04: analog var  4
  04 Supply water temperature       AD14: analog  var 21   AD04: analog var  5
  05 set point                      AD14: analog  var 23   AD04: analog var  13
  06 evaporator inlet temperature   AD14: analog  var 30   AD04: /
  07 circuit 1 liquid pressure      AD14: analog  var 24   AD04: analog var  1
  08 circuit 2 liquid pressure      AD14: analog  var 25   AD04: analog var  2
  09 eev1 suction press. circ. 1    AD14: analog  var 40   AD04: analog var  11
  10 eev2 suction press. circ. 2    AD14: analog  var 41   AD04: analog var  12
  11 eev1 suction temp. circ. 1     AD14: analog  var 38   AD04: /
  12 eev2 suction temp. circ. 2     AD14: analog  var 39   AD04: /
  13 eev1 actual superheat          AD14: analog  var 42   AD04: /
  14 eev2 actual superheat          AD14: analog  var 43   AD04: /
  15 head pressure control          AD14: analog  var 36   AD04: /
  16 water flow                     AD14: analog  var 54   AD04: analog var  122
  17 free cooling valve position    AD14: analog  var 34   AD04: /
  18 compressor 1 on/off            AD14: digital var 35   AD04: digital var 15
  19 compressor 2 on/off            AD14: digital var 37   AD04: digital var 16
  20 compressor 3 on/off            AD14: digital var 39   AD04: digital var 17
  21 compressor 4 on/off            AD14: digital var 41   AD04: digital var 18
  22 pump 1 on/off                  AD14: digital var 29   AD04: digital var 21
  23 pump 2 on/off                  AD14: digital var 31   AD04: digital var 22
  24 non-critical alarm             AD14: digital var 102  AD04: 0
  25 critical alarm                 AD14: digital var 103  AD04: 23 && 24 && 54 

- AireDale InRak cooler data format:
  01 timestamp: "%Y%m%dT%H%MZ" (ISO 8601, Zulu time)
  02 return air temparature        analog var 35
  03 return air humidity           analog var 34
  04 supply air temperature        analog var 36
  05 set point                     analog var 48
  06 aisle differential pressure   analog var 39
  07 inlet water temperature       analog var 33
  08 evaporator fan speed          analog var 2
  09 CW valve position             analog var 44
  10 fan trip                      digital var 31
  11 high return temperature       digital var 57
  12 low return temperature        digital var 58
  13 high supply temperature       digital var 59
  14 low supply temperature        digital var 60

- AireDale AHU data format:
  01 timestamp: "%Y%m%dT%H%MZ" (ISO 8601, Zulu time)
  02 air return temperature        analog var 4
  03 air return humidity           analog var 1   
  04 air supply temperature        analog var 5
  05 set point                     /
  06 fan operating                 digital var 21
  07 non-critical alarm            digital var 26
  08 critical alarm                digital var 27




